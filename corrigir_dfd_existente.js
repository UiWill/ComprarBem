// Script para corrigir o DFD existente que n√£o tem conteudo_html
// Execute no console do navegador

async function corrigirDFDExistente() {
  console.log('üîß CORRIGINDO DFD EXISTENTE SEM CONTEUDO_HTML...')

  try {
    const dfdId = 'f3b0006a-41f6-4552-abf5-3b16f41164f4'

    // 1. Buscar o DFD atual
    console.log('\nüìä 1. BUSCANDO DFD ATUAL:')

    const { data: dfd, error: errorBuscar } = await supabase
      .from('dfd_processo')
      .select('*')
      .eq('id', dfdId)
      .single()

    if (errorBuscar) {
      console.error('‚ùå Erro ao buscar DFD:', errorBuscar)
      return
    }

    console.log('‚úÖ DFD encontrado:', {
      id: dfd.id,
      justificativa: dfd.justificativa?.length || 0,
      necessidade_descricao: dfd.necessidade_descricao?.length || 0,
      conteudo_html_atual: dfd.conteudo_html?.length || 0
    })

    // 2. Gerar HTML manualmente usando a fun√ß√£o corrigida
    console.log('\nüõ†Ô∏è 2. GERANDO HTML CORRIGIDO:')

    function gerarHTMLDFDCorrigido(dadosDFD) {
      return `
        <div class="documento-dfd">
          <h1>DOCUMENTO DE FORMALIZA√á√ÉO DE DEMANDA - ${dadosDFD.modelo_usado?.toUpperCase() || 'MODELO PADR√ÉO'}</h1>

          ${dadosDFD.nome_presidente ? `
          <div class="secao">
            <h2>DADOS DO DEMANDANTE</h2>
            <p><strong>Nome do Presidente da CPPM:</strong> ${dadosDFD.nome_presidente}</p>
            ${dadosDFD.matricula_presidente ? `<p><strong>Matr√≠cula:</strong> ${dadosDFD.matricula_presidente}</p>` : ''}
            ${dadosDFD.email_presidente ? `<p><strong>E-mail:</strong> ${dadosDFD.email_presidente}</p>` : ''}
            ${dadosDFD.telefone_presidente ? `<p><strong>Telefone:</strong> ${dadosDFD.telefone_presidente}</p>` : ''}
          </div>
          ` : ''}

          <div class="secao">
            <h2>JUSTIFICATIVA</h2>
            <p>${dadosDFD.justificativa || '[CAMPO VAZIO - JUSTIFICATIVA N√ÉO PREENCHIDA]'}</p>
          </div>

          <div class="secao">
            <h2>DESCRI√á√ÉO DA NECESSIDADE</h2>
            <p>${dadosDFD.necessidade_descricao || '[CAMPO VAZIO - DESCRI√á√ÉO N√ÉO PREENCHIDA]'}</p>
          </div>

          ${dadosDFD.produtos_especificacao ? `
          <div class="secao">
            <h2>PRODUTOS A SEREM PR√â-QUALIFICADOS</h2>
            <p><strong>Especifica√ß√£o dos Produtos/Servi√ßos:</strong> ${dadosDFD.produtos_especificacao}</p>
          </div>
          ` : ''}

          ${dadosDFD.criterios_aceitacao ? `
          <div class="secao">
            <h2>CRIT√âRIOS DE ACEITA√á√ÉO</h2>
            <p><strong>Crit√©rios de Aceita√ß√£o:</strong> ${dadosDFD.criterios_aceitacao}</p>
          </div>
          ` : ''}

          ${dadosDFD.especificacoes_tecnicas ? `
          <div class="secao">
            <h2>ESPECIFICA√á√ïES T√âCNICAS DETALHADAS</h2>
            <p><strong>Especifica√ß√µes T√©cnicas Obrigat√≥rias:</strong> ${dadosDFD.especificacoes_tecnicas}</p>
          </div>
          ` : ''}

          ${dadosDFD.ensaios_exigidos ? `
          <div class="secao">
            <h2>ENSAIOS EXIGIDOS</h2>
            <p><strong>Ensaios e Testes Exigidos:</strong> ${dadosDFD.ensaios_exigidos}</p>
          </div>
          ` : ''}

          ${dadosDFD.observacoes_especiais ? `
          <div class="secao">
            <h2>OBSERVA√á√ïES ESPECIAIS</h2>
            <p>${dadosDFD.observacoes_especiais}</p>
          </div>
          ` : ''}

          <div class="assinatura">
            <p>Data: ${new Date().toLocaleDateString('pt-BR')}</p>
            <br>
            <p>_________________________________________</p>
            <p>Presidente da CPPM</p>
          </div>
        </div>
      `
    }

    const htmlGerado = gerarHTMLDFDCorrigido(dfd)

    console.log('‚úÖ HTML gerado:', {
      tamanho: htmlGerado.length,
      temJustificativa: htmlGerado.includes(dfd.justificativa?.substring(0, 20)),
      temNecessidade: htmlGerado.includes(dfd.necessidade_descricao?.substring(0, 20)),
      preview: htmlGerado.substring(0, 200) + '...'
    })

    // 3. Atualizar o DFD com o HTML gerado
    console.log('\nüíæ 3. ATUALIZANDO DFD NO BANCO:')

    const { data: dfdAtualizado, error: errorAtualizar } = await supabase
      .from('dfd_processo')
      .update({
        conteudo_html: htmlGerado,
        updated_at: new Date().toISOString()
      })
      .eq('id', dfdId)
      .select()
      .single()

    if (errorAtualizar) {
      console.error('‚ùå Erro ao atualizar DFD:', errorAtualizar)
      return
    }

    console.log('‚úÖ DFD atualizado com sucesso!')
    console.log('üìä Novo tamanho do conteudo_html:', dfdAtualizado.conteudo_html.length, 'caracteres')

    // 4. Verificar resultado
    console.log('\nüéØ 4. RESULTADO FINAL:')
    console.log('Agora gere o relat√≥rio PDF novamente para ver o DFD preenchido!')

  } catch (error) {
    console.error('‚ùå Erro geral:', error)
  }
}

// Executar corre√ß√£o
corrigirDFDExistente()