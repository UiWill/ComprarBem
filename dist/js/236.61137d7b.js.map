{"version":3,"file":"js/236.61137d7b.js","mappings":"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","sources":["webpack://comprar-bem/./src/services/relatorioService.js"],"sourcesContent":["/**\r\n * Serviço para geração de relatórios consolidados\r\n */\r\n\r\n// Função para gerar relatório consolidado de análise de preços\r\nexport function gerarRelatorioAnalisePrecos(analises, titulo = 'Relatório Consolidado de Análise de Preços') {\r\n  if (!analises || analises.length === 0) {\r\n    throw new Error('Nenhuma análise encontrada para gerar relatório')\r\n  }\r\n\r\n  // Calcular estatísticas consolidadas\r\n  const estatisticas = calcularEstatisticasConsolidadas(analises)\r\n  \r\n  // Gerar HTML do relatório\r\n  const htmlRelatorio = gerarHTMLRelatorioAnalise(analises, estatisticas, titulo)\r\n  \r\n  // Abrir relatório em nova janela\r\n  const novaJanela = window.open('', '_blank')\r\n  if (novaJanela) {\r\n    novaJanela.document.write(htmlRelatorio)\r\n    novaJanela.document.close()\r\n    \r\n    // Adicionar função de impressão\r\n    setTimeout(() => {\r\n      novaJanela.focus()\r\n    }, 500)\r\n  } else {\r\n    // Se não conseguir abrir nova janela, baixar como HTML\r\n    baixarHTML(htmlRelatorio, `relatorio_analise_precos_${new Date().toISOString().split('T')[0]}.html`)\r\n  }\r\n}\r\n\r\n// Função para calcular estatísticas consolidadas\r\nfunction calcularEstatisticasConsolidadas(analises) {\r\n  const analisesCompletas = analises.filter(a => a.status === 'concluida')\r\n  \r\n  if (analisesCompletas.length === 0) {\r\n    return {\r\n      totalAnalises: analises.length,\r\n      analisesCompletas: 0,\r\n      precoMedioGeral: 0,\r\n      menorPreco: 0,\r\n      maiorPreco: 0,\r\n      desvioMedio: 0,\r\n      totalOutliers: 0,\r\n      categorias: [],\r\n      recomendacoesPrincipais: []\r\n    }\r\n  }\r\n\r\n  const precos = analisesCompletas\r\n    .filter(a => a.preco_medio)\r\n    .map(a => a.preco_medio)\r\n    \r\n  const outliers = analisesCompletas\r\n    .map(a => a.outliers_detectados || 0)\r\n    .reduce((acc, curr) => acc + curr, 0)\r\n    \r\n  const desvios = analisesCompletas\r\n    .filter(a => a.desvio_padrao)\r\n    .map(a => a.desvio_padrao)\r\n\r\n  // Contar categorias\r\n  const categorias = {}\r\n  analisesCompletas.forEach(analise => {\r\n    if (analise.categoria) {\r\n      categorias[analise.categoria] = (categorias[analise.categoria] || 0) + 1\r\n    }\r\n  })\r\n\r\n  // Coletar recomendações principais\r\n  const recomendacoes = analisesCompletas\r\n    .filter(a => a.recomendacao)\r\n    .map(a => a.recomendacao)\r\n    .slice(0, 5) // Top 5 recomendações\r\n\r\n  return {\r\n    totalAnalises: analises.length,\r\n    analisesCompletas: analisesCompletas.length,\r\n    precoMedioGeral: precos.length > 0 ? precos.reduce((acc, curr) => acc + curr, 0) / precos.length : 0,\r\n    menorPreco: precos.length > 0 ? Math.min(...precos) : 0,\r\n    maiorPreco: precos.length > 0 ? Math.max(...precos) : 0,\r\n    desvioMedio: desvios.length > 0 ? desvios.reduce((acc, curr) => acc + curr, 0) / desvios.length : 0,\r\n    totalOutliers: outliers,\r\n    categorias: Object.entries(categorias).map(([nome, count]) => ({ nome, count })),\r\n    recomendacoesPrincipais: recomendacoes\r\n  }\r\n}\r\n\r\n// Função para gerar HTML do relatório\r\nfunction gerarHTMLRelatorioAnalise(analises, estatisticas, titulo) {\r\n  const agora = new Date()\r\n  const dataRelatorio = agora.toLocaleDateString('pt-BR')\r\n  const horaRelatorio = agora.toLocaleTimeString('pt-BR')\r\n\r\n  return `\r\n<!DOCTYPE html>\r\n<html lang=\"pt-BR\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>${titulo}</title>\r\n    <style>\r\n        * {\r\n            margin: 0;\r\n            padding: 0;\r\n            box-sizing: border-box;\r\n        }\r\n        \r\n        body {\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n            line-height: 1.6;\r\n            color: #333;\r\n            background: #f8f9fa;\r\n            padding: 20px;\r\n        }\r\n        \r\n        .container {\r\n            max-width: 1000px;\r\n            margin: 0 auto;\r\n            background: white;\r\n            border-radius: 8px;\r\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n            overflow: hidden;\r\n        }\r\n        \r\n        .header {\r\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n            color: white;\r\n            padding: 30px;\r\n            text-align: center;\r\n        }\r\n        \r\n        .header h1 {\r\n            font-size: 28px;\r\n            margin-bottom: 10px;\r\n        }\r\n        \r\n        .header .meta {\r\n            opacity: 0.9;\r\n            font-size: 14px;\r\n        }\r\n        \r\n        .content {\r\n            padding: 30px;\r\n        }\r\n        \r\n        .section {\r\n            margin-bottom: 40px;\r\n        }\r\n        \r\n        .section h2 {\r\n            color: #2c3e50;\r\n            margin-bottom: 20px;\r\n            padding-bottom: 10px;\r\n            border-bottom: 2px solid #e1e5e9;\r\n            font-size: 20px;\r\n        }\r\n        \r\n        .stats-grid {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n            gap: 20px;\r\n            margin-bottom: 30px;\r\n        }\r\n        \r\n        .stat-card {\r\n            background: #f8f9fa;\r\n            border: 1px solid #e9ecef;\r\n            border-radius: 8px;\r\n            padding: 20px;\r\n            text-align: center;\r\n        }\r\n        \r\n        .stat-value {\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            color: #495057;\r\n            margin-bottom: 5px;\r\n        }\r\n        \r\n        .stat-label {\r\n            font-size: 14px;\r\n            color: #6c757d;\r\n            text-transform: uppercase;\r\n            letter-spacing: 0.5px;\r\n        }\r\n        \r\n        .table {\r\n            width: 100%;\r\n            border-collapse: collapse;\r\n            margin-bottom: 20px;\r\n        }\r\n        \r\n        .table th,\r\n        .table td {\r\n            padding: 12px;\r\n            text-align: left;\r\n            border-bottom: 1px solid #dee2e6;\r\n        }\r\n        \r\n        .table th {\r\n            background: #f8f9fa;\r\n            font-weight: 600;\r\n            color: #495057;\r\n        }\r\n        \r\n        .table tr:hover {\r\n            background: #f8f9fa;\r\n        }\r\n        \r\n        .badge {\r\n            display: inline-block;\r\n            padding: 4px 8px;\r\n            border-radius: 4px;\r\n            font-size: 12px;\r\n            font-weight: 500;\r\n            text-transform: uppercase;\r\n        }\r\n        \r\n        .badge-success {\r\n            background: #d4edda;\r\n            color: #155724;\r\n        }\r\n        \r\n        .badge-warning {\r\n            background: #fff3cd;\r\n            color: #856404;\r\n        }\r\n        \r\n        .badge-danger {\r\n            background: #f8d7da;\r\n            color: #721c24;\r\n        }\r\n        \r\n        .badge-secondary {\r\n            background: #e2e3e5;\r\n            color: #383d41;\r\n        }\r\n        \r\n        .recommendations {\r\n            background: #e7f3ff;\r\n            border: 1px solid #b8daff;\r\n            border-radius: 8px;\r\n            padding: 20px;\r\n        }\r\n        \r\n        .recommendations h3 {\r\n            color: #004085;\r\n            margin-bottom: 15px;\r\n        }\r\n        \r\n        .recommendations ul {\r\n            list-style: none;\r\n            padding: 0;\r\n        }\r\n        \r\n        .recommendations li {\r\n            background: white;\r\n            margin-bottom: 10px;\r\n            padding: 10px;\r\n            border-radius: 4px;\r\n            border-left: 4px solid #007bff;\r\n        }\r\n        \r\n        .footer {\r\n            background: #f8f9fa;\r\n            padding: 20px;\r\n            text-align: center;\r\n            color: #6c757d;\r\n            font-size: 14px;\r\n            border-top: 1px solid #dee2e6;\r\n        }\r\n        \r\n        .btn-print {\r\n            background: #007bff;\r\n            color: white;\r\n            border: none;\r\n            padding: 10px 20px;\r\n            border-radius: 4px;\r\n            cursor: pointer;\r\n            font-size: 14px;\r\n            margin: 20px 0;\r\n        }\r\n        \r\n        .btn-print:hover {\r\n            background: #0056b3;\r\n        }\r\n        \r\n        @media print {\r\n            body {\r\n                background: white;\r\n                padding: 0;\r\n            }\r\n            \r\n            .container {\r\n                box-shadow: none;\r\n                border-radius: 0;\r\n            }\r\n            \r\n            .btn-print {\r\n                display: none;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h1>📊 ${titulo}</h1>\r\n            <div class=\"meta\">\r\n                Gerado em ${dataRelatorio} às ${horaRelatorio}\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"content\">\r\n            <button class=\"btn-print\" onclick=\"window.print()\">🖨️ Imprimir / Salvar PDF</button>\r\n            \r\n            <!-- Resumo Executivo -->\r\n            <div class=\"section\">\r\n                <h2>📋 Resumo Executivo</h2>\r\n                <div class=\"stats-grid\">\r\n                    <div class=\"stat-card\">\r\n                        <div class=\"stat-value\">${estatisticas.totalAnalises}</div>\r\n                        <div class=\"stat-label\">Total de Análises</div>\r\n                    </div>\r\n                    <div class=\"stat-card\">\r\n                        <div class=\"stat-value\">${estatisticas.analisesCompletas}</div>\r\n                        <div class=\"stat-label\">Análises Concluídas</div>\r\n                    </div>\r\n                    <div class=\"stat-card\">\r\n                        <div class=\"stat-value\">${formatCurrency(estatisticas.precoMedioGeral)}</div>\r\n                        <div class=\"stat-label\">Preço Médio Geral</div>\r\n                    </div>\r\n                    <div class=\"stat-card\">\r\n                        <div class=\"stat-value\">${estatisticas.totalOutliers}</div>\r\n                        <div class=\"stat-label\">Outliers Detectados</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <!-- Análises Detalhadas -->\r\n            <div class=\"section\">\r\n                <h2>📈 Análises Detalhadas</h2>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Título</th>\r\n                            <th>Categoria</th>\r\n                            <th>Status</th>\r\n                            <th>Preço Médio</th>\r\n                            <th>Outliers</th>\r\n                            <th>Data</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        ${analises.map(analise => `\r\n                            <tr>\r\n                                <td>${analise.titulo || 'N/A'}</td>\r\n                                <td>${analise.categoria || 'N/A'}</td>\r\n                                <td>\r\n                                    <span class=\"badge ${getStatusBadgeClass(analise.status)}\">\r\n                                        ${getStatusLabel(analise.status)}\r\n                                    </span>\r\n                                </td>\r\n                                <td>${formatCurrency(analise.preco_medio)}</td>\r\n                                <td>${analise.outliers_detectados || 0}</td>\r\n                                <td>${formatDate(analise.created_at)}</td>\r\n                            </tr>\r\n                        `).join('')}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n            <!-- Distribuição por Categoria -->\r\n            ${estatisticas.categorias.length > 0 ? `\r\n            <div class=\"section\">\r\n                <h2>📊 Distribuição por Categoria</h2>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Categoria</th>\r\n                            <th>Quantidade</th>\r\n                            <th>Percentual</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        ${estatisticas.categorias.map(cat => `\r\n                            <tr>\r\n                                <td>${cat.nome}</td>\r\n                                <td>${cat.count}</td>\r\n                                <td>${((cat.count / estatisticas.totalAnalises) * 100).toFixed(1)}%</td>\r\n                            </tr>\r\n                        `).join('')}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            ` : ''}\r\n            \r\n            <!-- Recomendações -->\r\n            ${estatisticas.recomendacoesPrincipais.length > 0 ? `\r\n            <div class=\"section\">\r\n                <div class=\"recommendations\">\r\n                    <h3>💡 Principais Recomendações</h3>\r\n                    <ul>\r\n                        ${estatisticas.recomendacoesPrincipais.map(rec => `\r\n                            <li>${rec}</li>\r\n                        `).join('')}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            ` : ''}\r\n        </div>\r\n        \r\n        <div class=\"footer\">\r\n            <p>Relatório gerado automaticamente pelo Sistema CPM - Comprar Bem</p>\r\n            <p>Dados baseados em ${estatisticas.analisesCompletas} análise(s) concluída(s) de um total de ${estatisticas.totalAnalises}</p>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>\r\n  `\r\n}\r\n\r\n// Função para baixar HTML\r\nfunction baixarHTML(conteudo, nomeArquivo) {\r\n  const blob = new Blob([conteudo], { type: 'text/html;charset=utf-8' })\r\n  const url = window.URL.createObjectURL(blob)\r\n  \r\n  const link = document.createElement('a')\r\n  link.href = url\r\n  link.download = nomeArquivo\r\n  link.style.display = 'none'\r\n  \r\n  document.body.appendChild(link)\r\n  link.click()\r\n  document.body.removeChild(link)\r\n  \r\n  setTimeout(() => {\r\n    window.URL.revokeObjectURL(url)\r\n  }, 100)\r\n}\r\n\r\n// Funções auxiliares de formatação\r\nfunction formatCurrency(value) {\r\n  if (!value) return 'R$ 0,00'\r\n  return new Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL'\r\n  }).format(value)\r\n}\r\n\r\nfunction formatDate(date) {\r\n  if (!date) return 'N/A'\r\n  return new Date(date).toLocaleDateString('pt-BR')\r\n}\r\n\r\nfunction getStatusLabel(status) {\r\n  const labels = {\r\n    pendente: 'Pendente',\r\n    processando: 'Processando',\r\n    concluida: 'Concluída',\r\n    erro: 'Erro',\r\n    cancelada: 'Cancelada'\r\n  }\r\n  return labels[status] || status\r\n}\r\n\r\nfunction getStatusBadgeClass(status) {\r\n  const classes = {\r\n    pendente: 'badge-warning',\r\n    processando: 'badge-secondary',\r\n    concluida: 'badge-success',\r\n    erro: 'badge-danger',\r\n    cancelada: 'badge-secondary'\r\n  }\r\n  return classes[status] || 'badge-secondary'\r\n}"],"names":["gerarRelatorioAnalisePrecos","analises","titulo","length","Error","estatisticas","calcularEstatisticasConsolidadas","htmlRelatorio","gerarHTMLRelatorioAnalise","novaJanela","window","open","document","write","close","setTimeout","focus","baixarHTML","Date","toISOString","split","analisesCompletas","filter","a","status","totalAnalises","precoMedioGeral","menorPreco","maiorPreco","desvioMedio","totalOutliers","categorias","recomendacoesPrincipais","precos","preco_medio","map","outliers","outliers_detectados","reduce","acc","curr","desvios","desvio_padrao","forEach","analise","categoria","recomendacoes","recomendacao","slice","Math","min","max","Object","entries","nome","count","agora","dataRelatorio","toLocaleDateString","horaRelatorio","toLocaleTimeString","formatCurrency","getStatusBadgeClass","getStatusLabel","formatDate","created_at","join","cat","toFixed","rec","conteudo","nomeArquivo","blob","Blob","type","url","URL","createObjectURL","link","createElement","href","download","style","display","body","appendChild","click","removeChild","revokeObjectURL","value","Intl","NumberFormat","currency","format","date","labels","pendente","processando","concluida","erro","cancelada","classes"],"sourceRoot":""}