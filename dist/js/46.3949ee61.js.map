{"version":3,"file":"js/46.3949ee61.js","mappings":"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","sources":["webpack://comprar-bem/./src/components/DebugUsuarios.vue","webpack://comprar-bem/./src/services/limpezaUsuariosService.js","webpack://comprar-bem/src/components/DebugUsuarios.vue","webpack://comprar-bem/./src/components/DebugUsuarios.vue?5948","webpack://comprar-bem/./src/components/DebugUsuarios.vue?1afd"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"debug-usuarios\"},[_c('div',{staticClass:\"card\"},[_vm._m(0),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"debug-actions\"},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"disabled\":_vm.carregando},on:{\"click\":_vm.verificarSistema}},[_c('i',{staticClass:\"fas fa-search\"}),_vm._v(\" Verificar Sistema \")]),_c('button',{staticClass:\"btn btn-warning\",attrs:{\"disabled\":_vm.carregando},on:{\"click\":_vm.limparUsuariosOrfaos}},[_c('i',{staticClass:\"fas fa-broom\"}),_vm._v(\" Limpar √ìrf√£os \")]),_c('button',{staticClass:\"btn btn-danger\",attrs:{\"disabled\":_vm.carregando},on:{\"click\":_vm.limparTudo}},[_c('i',{staticClass:\"fas fa-trash\"}),_vm._v(\" Limpar Tudo \")])]),(_vm.carregando)?_c('div',{staticClass:\"loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_vm._v(\" Carregando... \")]):_vm._e(),(_vm.resultados)?_c('div',{staticClass:\"resultados\"},[_c('h4',[_vm._v(\"üìä Diagn√≥stico do Sistema\")]),_c('div',{staticClass:\"secao\"},[_c('h5',[_vm._v(\"üë• Usu√°rios na Tabela (\"+_vm._s(_vm.usuariosTabela.length)+\")\")]),(_vm.usuariosTabela.length === 0)?_c('div',{staticClass:\"alert alert-success\"},[_vm._v(\" ‚úÖ Nenhum usu√°rio encontrado - tabela limpa \")]):_c('div',{staticClass:\"usuarios-lista\"},_vm._l((_vm.usuariosTabela),function(usuario){return _c('div',{key:usuario.id,staticClass:\"usuario-item\"},[_c('strong',[_vm._v(_vm._s(usuario.email))]),_vm._v(\" - \"+_vm._s(usuario.nome)+\" \"),_c('span',{staticClass:\"badge\",class:usuario.ativo ? 'badge-success' : 'badge-danger'},[_vm._v(\" \"+_vm._s(usuario.ativo ? 'Ativo' : 'Inativo')+\" \")]),_c('span',{staticClass:\"badge badge-info\"},[_vm._v(_vm._s(usuario.tipo))]),_c('span',{staticClass:\"badge badge-secondary\"},[_vm._v(_vm._s(usuario.perfil_usuario))])])}),0)]),_c('div',{staticClass:\"secao\"},[_c('h5',[_vm._v(\"üè¢ Tenants (\"+_vm._s(_vm.tenants.length)+\")\")]),(_vm.tenants.length === 0)?_c('div',{staticClass:\"alert alert-success\"},[_vm._v(\" ‚úÖ Nenhum tenant encontrado - tabela limpa \")]):_c('div',{staticClass:\"tenants-lista\"},_vm._l((_vm.tenants),function(tenant){return _c('div',{key:tenant.id,staticClass:\"tenant-item\"},[_c('strong',[_vm._v(_vm._s(tenant.nome))]),_vm._v(\" - ID: \"+_vm._s(tenant.id)+\" \"),_c('span',{staticClass:\"badge\",class:tenant.ativo ? 'badge-success' : 'badge-danger'},[_vm._v(\" \"+_vm._s(tenant.ativo ? 'Ativo' : 'Inativo')+\" \")])])}),0)]),_c('div',{staticClass:\"secao\"},[_c('h5',[_vm._v(\"üìß Teste de Emails\")]),_c('div',{staticClass:\"email-teste\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.emailTeste),expression:\"emailTeste\"}],staticClass:\"form-control\",attrs:{\"type\":\"email\",\"placeholder\":\"Digite um email para testar\"},domProps:{\"value\":(_vm.emailTeste)},on:{\"input\":function($event){if($event.target.composing)return;_vm.emailTeste=$event.target.value}}}),_c('button',{staticClass:\"btn btn-secondary\",on:{\"click\":_vm.testarEmail}},[_c('i',{staticClass:\"fas fa-check\"}),_vm._v(\" Testar \")])]),(_vm.resultadoEmailTeste)?_c('div',{staticClass:\"mt-2\"},[_vm._v(\" \"+_vm._s(_vm.resultadoEmailTeste)+\" \")]):_vm._e()])]):_vm._e(),(_vm.mensagem)?_c('div',{staticClass:\"alert\",class:_vm.tipoMensagem},[_vm._v(\" \"+_vm._s(_vm.mensagem)+\" \")]):_vm._e()])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card-header\"},[_c('h3',[_vm._v(\"üîç Debug - Sistema de Usu√°rios\")]),_c('p',[_vm._v(\"Ferramenta para diagnosticar problemas de usu√°rios √≥rf√£os\")])])\n}]\n\nexport { render, staticRenderFns }","import { supabase } from './supabase'\n\n/**\n * Servi√ßo para limpeza de usu√°rios √≥rf√£os\n * Remove usu√°rios que ficaram no Auth mas n√£o na tabela usuarios\n */\nexport class LimpezaUsuariosService {\n\n  /**\n   * Limpar usu√°rios espec√≠ficos por email\n   */\n  static async limparUsuariosPorEmails(emails) {\n    console.log('üßπ Iniciando limpeza de usu√°rios √≥rf√£os para emails:', emails)\n    \n    const resultados = []\n    \n    for (const email of emails) {\n      try {\n        console.log(`üîç Verificando usu√°rio: ${email}`)\n        \n        // 1. Verificar se existe na tabela usuarios\n        const { data: usuarioTabela } = await supabase\n          .from('usuarios')\n          .select('email')\n          .eq('email', email)\n          .maybeSingle()\n        \n        // 2. Se n√£o existe na tabela mas existe no Auth, podemos tentar remover\n        if (!usuarioTabela) {\n          console.log(`‚ùå Usu√°rio ${email} n√£o encontrado na tabela usuarios - pode ser √≥rf√£o no Auth`)\n          \n          // Nota: O Supabase n√£o permite delete direto do Auth via JavaScript\n          // Mas podemos registrar o problema\n          resultados.push({\n            email,\n            status: 'orfao_detectado',\n            mensagem: 'Usu√°rio existe no Auth mas n√£o na tabela usuarios'\n          })\n        } else {\n          console.log(`‚úÖ Usu√°rio ${email} existe corretamente na tabela`)\n          resultados.push({\n            email,\n            status: 'ok',\n            mensagem: 'Usu√°rio existe corretamente'\n          })\n        }\n        \n      } catch (error) {\n        console.error(`Erro ao verificar ${email}:`, error)\n        resultados.push({\n          email,\n          status: 'erro',\n          mensagem: error.message\n        })\n      }\n    }\n    \n    return resultados\n  }\n\n  /**\n   * Verificar se email est√° livre para uso\n   */\n  static async emailEstaLivre(email) {\n    try {\n      // Verificar na tabela usuarios\n      const { data: usuarioTabela } = await supabase\n        .from('usuarios')\n        .select('email')\n        .eq('email', email)\n        .maybeSingle()\n      \n      return !usuarioTabela\n    } catch (error) {\n      console.error('Erro ao verificar email:', error)\n      return false\n    }\n  }\n\n  /**\n   * Listar todos os usu√°rios da tabela usuarios\n   */\n  static async listarUsuariosTabela() {\n    try {\n      const { data, error } = await supabase\n        .from('usuarios')\n        .select('id, email, nome, tipo, perfil_usuario, tenant_id, ativo')\n        .order('criado_em', { ascending: false })\n      \n      if (error) throw error\n      \n      return data || []\n    } catch (error) {\n      console.error('Erro ao listar usu√°rios:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Remover usu√°rio espec√≠fico da tabela usuarios\n   */\n  static async removerUsuarioTabela(email) {\n    try {\n      console.log(`üóëÔ∏è Removendo usu√°rio ${email} da tabela usuarios`)\n      \n      const { error } = await supabase\n        .from('usuarios')\n        .delete()\n        .eq('email', email)\n      \n      if (error) throw error\n      \n      console.log(`‚úÖ Usu√°rio ${email} removido da tabela usuarios`)\n      return true\n    } catch (error) {\n      console.error(`Erro ao remover usu√°rio ${email}:`, error)\n      throw error\n    }\n  }\n\n  /**\n   * Limpar tenant espec√≠fico\n   */\n  static async removerTenant(tenantId) {\n    try {\n      console.log(`üóëÔ∏è Removendo tenant ${tenantId}`)\n      \n      // Primeiro remover usu√°rios do tenant\n      await supabase\n        .from('usuarios')\n        .delete()\n        .eq('tenant_id', tenantId)\n      \n      // Depois remover o tenant\n      const { error } = await supabase\n        .from('tenants')\n        .delete()\n        .eq('id', tenantId)\n      \n      if (error) throw error\n      \n      console.log(`‚úÖ Tenant ${tenantId} removido`)\n      return true\n    } catch (error) {\n      console.error(`Erro ao remover tenant ${tenantId}:`, error)\n      throw error\n    }\n  }\n\n  /**\n   * Fun√ß√£o de limpeza completa para teste\n   */\n  static async limpezaCompleta(emailsParaLimpar) {\n    console.log('üßπ LIMPEZA COMPLETA INICIADA')\n    console.log('Emails para limpar:', emailsParaLimpar)\n    \n    try {\n      // 1. Remover da tabela usuarios\n      for (const email of emailsParaLimpar) {\n        try {\n          await this.removerUsuarioTabela(email)\n        } catch (error) {\n          console.warn(`Aviso: n√£o foi poss√≠vel remover ${email} da tabela usuarios`)\n        }\n      }\n      \n      // 2. Verificar se ficou algum tenant √≥rf√£o\n      const { data: tenantsOrfaos } = await supabase\n        .from('tenants')\n        .select('id, nome')\n        .not('id', 'in', `(${\n          (await supabase.from('usuarios').select('tenant_id').neq('tenant_id', null))\n            .data?.map(u => `'${u.tenant_id}'`).join(',') || \"''\"\n        })`)\n      \n      if (tenantsOrfaos && tenantsOrfaos.length > 0) {\n        console.log('üóëÔ∏è Removendo tenants √≥rf√£os:', tenantsOrfaos)\n        for (const tenant of tenantsOrfaos) {\n          try {\n            await this.removerTenant(tenant.id)\n          } catch (error) {\n            console.warn(`Aviso: erro ao remover tenant √≥rf√£o ${tenant.id}`)\n          }\n        }\n      }\n      \n      console.log('‚úÖ LIMPEZA COMPLETA FINALIZADA')\n      return true\n      \n    } catch (error) {\n      console.error('Erro na limpeza completa:', error)\n      throw error\n    }\n  }\n}\n\nexport default LimpezaUsuariosService","<template>\n  <div class=\"debug-usuarios\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>üîç Debug - Sistema de Usu√°rios</h3>\n        <p>Ferramenta para diagnosticar problemas de usu√°rios √≥rf√£os</p>\n      </div>\n      \n      <div class=\"card-body\">\n        <!-- Bot√µes de A√ß√£o -->\n        <div class=\"debug-actions\">\n          <button @click=\"verificarSistema\" class=\"btn btn-primary\" :disabled=\"carregando\">\n            <i class=\"fas fa-search\"></i> Verificar Sistema\n          </button>\n          \n          <button @click=\"limparUsuariosOrfaos\" class=\"btn btn-warning\" :disabled=\"carregando\">\n            <i class=\"fas fa-broom\"></i> Limpar √ìrf√£os\n          </button>\n          \n          <button @click=\"limparTudo\" class=\"btn btn-danger\" :disabled=\"carregando\">\n            <i class=\"fas fa-trash\"></i> Limpar Tudo\n          </button>\n        </div>\n\n        <!-- Loading -->\n        <div v-if=\"carregando\" class=\"loading\">\n          <i class=\"fas fa-spinner fa-spin\"></i> Carregando...\n        </div>\n\n        <!-- Resultados -->\n        <div v-if=\"resultados\" class=\"resultados\">\n          <h4>üìä Diagn√≥stico do Sistema</h4>\n          \n          <!-- Usu√°rios na Tabela -->\n          <div class=\"secao\">\n            <h5>üë• Usu√°rios na Tabela ({{usuariosTabela.length}})</h5>\n            <div v-if=\"usuariosTabela.length === 0\" class=\"alert alert-success\">\n              ‚úÖ Nenhum usu√°rio encontrado - tabela limpa\n            </div>\n            <div v-else class=\"usuarios-lista\">\n              <div v-for=\"usuario in usuariosTabela\" :key=\"usuario.id\" class=\"usuario-item\">\n                <strong>{{usuario.email}}</strong> - {{usuario.nome}} \n                <span class=\"badge\" :class=\"usuario.ativo ? 'badge-success' : 'badge-danger'\">\n                  {{usuario.ativo ? 'Ativo' : 'Inativo'}}\n                </span>\n                <span class=\"badge badge-info\">{{usuario.tipo}}</span>\n                <span class=\"badge badge-secondary\">{{usuario.perfil_usuario}}</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Tenants -->\n          <div class=\"secao\">\n            <h5>üè¢ Tenants ({{tenants.length}})</h5>\n            <div v-if=\"tenants.length === 0\" class=\"alert alert-success\">\n              ‚úÖ Nenhum tenant encontrado - tabela limpa\n            </div>\n            <div v-else class=\"tenants-lista\">\n              <div v-for=\"tenant in tenants\" :key=\"tenant.id\" class=\"tenant-item\">\n                <strong>{{tenant.nome}}</strong> - ID: {{tenant.id}}\n                <span class=\"badge\" :class=\"tenant.ativo ? 'badge-success' : 'badge-danger'\">\n                  {{tenant.ativo ? 'Ativo' : 'Inativo'}}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Teste de Emails -->\n          <div class=\"secao\">\n            <h5>üìß Teste de Emails</h5>\n            <div class=\"email-teste\">\n              <input \n                type=\"email\" \n                v-model=\"emailTeste\" \n                placeholder=\"Digite um email para testar\"\n                class=\"form-control\"\n              >\n              <button @click=\"testarEmail\" class=\"btn btn-secondary\">\n                <i class=\"fas fa-check\"></i> Testar\n              </button>\n            </div>\n            <div v-if=\"resultadoEmailTeste\" class=\"mt-2\">\n              {{resultadoEmailTeste}}\n            </div>\n          </div>\n        </div>\n\n        <!-- Mensagens -->\n        <div v-if=\"mensagem\" class=\"alert\" :class=\"tipoMensagem\">\n          {{mensagem}}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { supabase } from '@/services/supabase'\nimport LimpezaUsuariosService from '@/services/limpezaUsuariosService'\n\nexport default {\n  name: 'DebugUsuarios',\n  data() {\n    return {\n      carregando: false,\n      resultados: null,\n      usuariosTabela: [],\n      tenants: [],\n      mensagem: '',\n      tipoMensagem: '',\n      emailTeste: 'teste@exemplo.com',\n      resultadoEmailTeste: ''\n    }\n  },\n  methods: {\n    async verificarSistema() {\n      try {\n        this.carregando = true\n        this.mensagem = ''\n        \n        console.log('üîç Iniciando verifica√ß√£o do sistema...')\n        \n        // Buscar usu√°rios\n        this.usuariosTabela = await LimpezaUsuariosService.listarUsuariosTabela()\n        \n        // Buscar tenants\n        const { data: tenants } = await supabase\n          .from('tenants')\n          .select('*')\n          .order('criado_em', { ascending: false })\n        \n        this.tenants = tenants || []\n        this.resultados = true\n        \n        this.mostrarMensagem('Sistema verificado com sucesso!', 'alert-success')\n        \n      } catch (error) {\n        console.error('Erro na verifica√ß√£o:', error)\n        this.mostrarMensagem(`Erro: ${error.message}`, 'alert-danger')\n      } finally {\n        this.carregando = false\n      }\n    },\n\n    async limparUsuariosOrfaos() {\n      try {\n        this.carregando = true\n        \n        const emails = this.usuariosTabela.map(u => u.email)\n        \n        if (emails.length === 0) {\n          this.mostrarMensagem('Nenhum usu√°rio para limpar', 'alert-info')\n          return\n        }\n        \n        const confirmacao = confirm(`Deseja limpar ${emails.length} usu√°rios √≥rf√£os?`)\n        if (!confirmacao) return\n        \n        await LimpezaUsuariosService.limpezaCompleta(emails)\n        \n        this.mostrarMensagem('Limpeza conclu√≠da!', 'alert-success')\n        await this.verificarSistema()\n        \n      } catch (error) {\n        console.error('Erro na limpeza:', error)\n        this.mostrarMensagem(`Erro: ${error.message}`, 'alert-danger')\n      } finally {\n        this.carregando = false\n      }\n    },\n\n    async limparTudo() {\n      try {\n        const confirmacao = confirm('‚ö†Ô∏è ATEN√á√ÉO: Isso ir√° deletar TODOS os usu√°rios e tenants. Continuar?')\n        if (!confirmacao) return\n        \n        const confirmacao2 = confirm('Tem certeza? Esta a√ß√£o n√£o pode ser desfeita!')\n        if (!confirmacao2) return\n        \n        this.carregando = true\n        \n        // Deletar todos os usu√°rios\n        await supabase\n          .from('usuarios')\n          .delete()\n          .neq('id', '00000000-0000-0000-0000-000000000000') // Condi√ß√£o que sempre √© verdadeira\n        \n        // Deletar todos os tenants\n        await supabase\n          .from('tenants')\n          .delete()\n          .neq('id', '00000000-0000-0000-0000-000000000000')\n        \n        this.mostrarMensagem('Sistema completamente limpo!', 'alert-success')\n        await this.verificarSistema()\n        \n      } catch (error) {\n        console.error('Erro na limpeza completa:', error)\n        this.mostrarMensagem(`Erro: ${error.message}`, 'alert-danger')\n      } finally {\n        this.carregando = false\n      }\n    },\n\n    async testarEmail() {\n      try {\n        if (!this.emailTeste) return\n        \n        const disponivel = await LimpezaUsuariosService.emailEstaLivre(this.emailTeste)\n        this.resultadoEmailTeste = disponivel \n          ? `‚úÖ Email ${this.emailTeste} est√° LIVRE para uso`\n          : `‚ùå Email ${this.emailTeste} J√Å EXISTE no sistema`\n        \n      } catch (error) {\n        this.resultadoEmailTeste = `Erro: ${error.message}`\n      }\n    },\n\n    mostrarMensagem(texto, tipo) {\n      this.mensagem = texto\n      this.tipoMensagem = tipo\n      setTimeout(() => {\n        this.mensagem = ''\n      }, 5000)\n    }\n  },\n\n  mounted() {\n    // Verificar sistema automaticamente ao carregar\n    this.verificarSistema()\n  }\n}\n</script>\n\n<style scoped>\n.debug-usuarios {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.card-header {\n  background-color: #f8f9fa;\n  padding: 20px;\n  border-bottom: 1px solid #ddd;\n}\n\n.card-header h3 {\n  margin: 0 0 10px 0;\n  color: #333;\n}\n\n.card-body {\n  padding: 20px;\n}\n\n.debug-actions {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n}\n\n.btn {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n}\n\n.btn-warning {\n  background-color: #ffc107;\n  color: #212529;\n}\n\n.btn-danger {\n  background-color: #dc3545;\n  color: white;\n}\n\n.btn-secondary {\n  background-color: #6c757d;\n  color: white;\n}\n\n.loading {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.resultados {\n  margin-top: 20px;\n}\n\n.secao {\n  margin-bottom: 30px;\n  padding: 15px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n}\n\n.secao h5 {\n  margin: 0 0 15px 0;\n  color: #333;\n}\n\n.usuarios-lista, .tenants-lista {\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.usuario-item, .tenant-item {\n  padding: 8px;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 5px;\n}\n\n.badge {\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.badge-success {\n  background-color: #28a745;\n  color: white;\n}\n\n.badge-danger {\n  background-color: #dc3545;\n  color: white;\n}\n\n.badge-info {\n  background-color: #17a2b8;\n  color: white;\n}\n\n.badge-secondary {\n  background-color: #6c757d;\n  color: white;\n}\n\n.email-teste {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.form-control {\n  flex: 1;\n  padding: 8px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.alert {\n  padding: 12px;\n  border-radius: 4px;\n  margin-top: 15px;\n}\n\n.alert-success {\n  background-color: #d4edda;\n  border-color: #c3e6cb;\n  color: #155724;\n}\n\n.alert-danger {\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n  color: #721c24;\n}\n\n.alert-info {\n  background-color: #d1ecf1;\n  border-color: #bee5eb;\n  color: #0c5460;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DebugUsuarios.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DebugUsuarios.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./DebugUsuarios.vue?vue&type=template&id=335ff1eb&scoped=true\"\nimport script from \"./DebugUsuarios.vue?vue&type=script&lang=js\"\nexport * from \"./DebugUsuarios.vue?vue&type=script&lang=js\"\nimport style0 from \"./DebugUsuarios.vue?vue&type=style&index=0&id=335ff1eb&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"335ff1eb\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_m","attrs","carregando","on","verificarSistema","_v","limparUsuariosOrfaos","limparTudo","_e","resultados","_s","usuariosTabela","length","_l","usuario","key","id","email","nome","class","ativo","tipo","perfil_usuario","tenants","tenant","directives","name","rawName","value","emailTeste","expression","domProps","$event","target","composing","testarEmail","resultadoEmailTeste","mensagem","tipoMensagem","staticRenderFns","LimpezaUsuariosService","limparUsuariosPorEmails","emails","console","log","data","usuarioTabela","supabase","from","select","eq","maybeSingle","push","status","error","message","emailEstaLivre","listarUsuariosTabela","order","ascending","removerUsuarioTabela","delete","removerTenant","tenantId","limpezaCompleta","emailsParaLimpar","warn","tenantsOrfaos","not","neq","map","u","tenant_id","join","methods","mostrarMensagem","confirmacao","confirm","confirmacao2","disponivel","texto","setTimeout","mounted","component"],"sourceRoot":""}